input {
  beats{
    port => 5044
    tags => ["local"]
  }
  
  file {
    path => "/var/log/nginx/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["containerisation"]
  }
  
  file {
    path => "/usr/share/logstash/s3-logs/*.json"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json_lines"
    type => "s3-log"
    tags => ["cloud", "aws", "cloudwatch"]
  }
}

filter {
  if [type] == "s3-log" {
    mutate {
      add_field => { "source" => "s3-log" }
    }
    # Add additional filters if needed, e.g. timestamp, fields normalization, etc.
  } else {
    grok {
      match => { 
        "message" => "%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{DATA:useragent_string}\""
      }
    }
  
    if [x_forwarded_for] and [x_forwarded_for] != "-" {
      mutate {
        copy => { "x_forwarded_for" => "client_ip" }
      }
    }

    mutate {
      add_field => {
        "[source][address]" => "%{client_ip}"
        "[http][request][method]" => "%{method}"
        "[http][version]" => "%{http_version}"
        "[url][original]" => "%{request}"
        "[http][request][referrer]" => "%{referrer}"
        "[user_agent][original]" => "%{useragent_string}"
        "[http][response][status_code]" => "%{status}"
        "[http][response][body][bytes]" => "%{bytes}"
      }
    }
    geoip {
      source => "client_ip"
      target => "source.geo"
      database => "/usr/share/logstash/GeoLite2-City.mmdb"
    }
    useragent {
      source => "useragent_string"
      target => "user_agent"
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "web-logs-enriched-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}

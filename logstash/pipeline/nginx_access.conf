input {
  file {
    path => "/var/log/nginx/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    tags => ["containerisation"]
  }
}

filter {
  grok {
    match => {
      "message" => "%{IPORHOST:client_ip} - - \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:bytes} \"%{DATA:referrer}\" \"%{DATA:useragent_string}\""
    }
  }

  mutate {
    add_field => {
      "[source][address]" => "%{client_ip}"
      "[http][request][method]" => "%{method}"
      "[http][version]" => "%{http_version}"
      "[url][original]" => "%{request}"
      "[http][request][referrer]" => "%{referrer}"
      "[user_agent][original]" => "%{useragent_string}"
      "[http][response][status_code]" => "%{status}"
      "[http][response][body][bytes]" => "%{bytes}"
    }
  }

  geoip {
    source => "client_ip"
    target => "source.geo"
    database => "/usr/share/logstash/GeoLite2-City.mmdb"
  }

  useragent {
    source => "useragent_string"
    target => "user_agent"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "elastic"
    password => "Ditiss_pass_2025"
    index => "container-logs-%{+YYYY.MM.dd}"
  }

  stdout {
    codec => rubydebug
  }
}
